version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: lcs-postgres
    environment:
      POSTGRES_USER: lcsuser
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: lessoncraftstudio
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - lcs-network
    restart: unless-stopped

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: lcs-api
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: lcsuser
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: lessoncraftstudio
      JWT_SECRET: ${JWT_SECRET}
      PORT: 3001
    ports:
      - "3001:3001"
    depends_on:
      - postgres
    networks:
      - lcs-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: lcs-frontend
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
      NEXT_PUBLIC_STRAPI_URL: ${NEXT_PUBLIC_STRAPI_URL}
      NEXT_PUBLIC_MAX_FILE_SIZE: ${NEXT_PUBLIC_MAX_FILE_SIZE:-5242880}
      DATABASE_URL: ${DATABASE_URL}
    volumes:
      - frontend_uploads:/app/public/images
      - frontend_data:/app/public/data
      - frontend_blog:/app/public/blog
    ports:
      - "3000:3000"
    depends_on:
      - api
      - postgres
    networks:
      - lcs-network
    restart: unless-stopped

  legacy-apps:
    build:
      context: ./frontend
      dockerfile: Dockerfile.legacy
    container_name: lcs-legacy-apps
    ports:
      - "3002:80"
    networks:
      - lcs-network
    restart: unless-stopped

  strapi:
    build:
      context: ./strapi
      dockerfile: Dockerfile.prod
    container_name: lcs-strapi
    environment:
      NODE_ENV: production
      DATABASE_CLIENT: postgres
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: lessoncraftstudio
      DATABASE_USERNAME: lcsuser
      DATABASE_PASSWORD: ${DB_PASSWORD}
      DATABASE_SSL: false
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
    ports:
      - "1337:1337"
    depends_on:
      - postgres
    networks:
      - lcs-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: lcs-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - api
      - strapi
    networks:
      - lcs-network
    restart: unless-stopped

networks:
  lcs-network:
    driver: bridge

volumes:
  postgres_data:
  frontend_uploads:
  frontend_data:
  frontend_blog: