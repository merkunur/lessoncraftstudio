// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int                   @id @default(autoincrement())
  email              String                @unique
  passwordHash       String                @map("password_hash")
  firstName          String?               @map("first_name")
  lastName           String?               @map("last_name")
  subscriptionTier   String                @default("free") @map("subscription_tier")
  stripeCustomerId   String?               @unique @map("stripe_customer_id")
  preferredLocale    String                @default("en") @map("preferred_locale")
  createdAt          DateTime              @default(now()) @map("created_at")
  updatedAt          DateTime              @updatedAt @map("updated_at")
  emailVerified      Boolean               @default(false) @map("email_verified")
  verificationToken  String?               @unique @map("verification_token")
  resetToken         String?               @unique @map("reset_token")
  resetTokenExpires  DateTime?             @map("reset_token_expires")
  
  sessions           UserSession[]
  subscription       Subscription?
  generations        WorksheetGeneration[]
  
  @@map("users")
}

model UserSession {
  id           Int       @id @default(autoincrement())
  userId       Int       @map("user_id")
  sessionId    String    @unique @map("session_id")
  createdAt    DateTime  @default(now()) @map("created_at")
  expiresAt    DateTime  @map("expires_at")
  ipAddress    String?   @map("ip_address")
  userAgent    String?   @map("user_agent")
  isActive     Boolean   @default(true) @map("is_active")
  
  user         User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([userId])
  @@index([sessionId])
  @@map("user_sessions")
}

model Subscription {
  id                      Int       @id @default(autoincrement())
  userId                  Int       @unique @map("user_id")
  stripeSubscriptionId    String?   @unique @map("stripe_subscription_id")
  tier                    String
  status                  String
  currentPeriodStart      DateTime? @map("current_period_start")
  currentPeriodEnd        DateTime? @map("current_period_end")
  cancelAtPeriodEnd       Boolean   @default(false) @map("cancel_at_period_end")
  createdAt               DateTime  @default(now()) @map("created_at")
  updatedAt               DateTime  @updatedAt @map("updated_at")
  
  user                    User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([userId])
  @@map("subscriptions")
}

model WorksheetGeneration {
  id             Int       @id @default(autoincrement())
  userId         Int       @map("user_id")
  appName        String    @map("app_name")
  generatedAt    DateTime  @default(now()) @map("generated_at")
  configuration  Json?
  fileUrl        String?   @map("file_url")
  watermarked    Boolean   @default(false)
  
  user           User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([userId])
  @@index([generatedAt])
  @@map("worksheet_generations")
}
