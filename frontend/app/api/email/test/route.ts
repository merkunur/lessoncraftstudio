import { NextRequest, NextResponse } from 'next/server';
import { verifyEmailConnection, getEmailProviderInfo } from '@/lib/email/config';
import { sendEmail } from '@/lib/email';
import { withAdmin } from '@/lib/admin-auth';

/**
 * Test email configuration
 * Admin only - tests SMTP connection and optionally sends test email
 */
async function testEmailHandler(request: NextRequest) {
  try {
    const { searchParams } = new URL(request.url);
    const sendTest = searchParams.get('send') === 'true';
    const testEmail = searchParams.get('to');

    // Get email provider info
    const providerInfo = getEmailProviderInfo();

    // Verify SMTP connection
    let connectionVerified = false;
    if (providerInfo.provider !== 'console') {
      try {
        connectionVerified = await verifyEmailConnection();
      } catch (error) {
        return NextResponse.json(
          {
            success: false,
            error: 'SMTP connection failed',
            details: error instanceof Error ? error.message : 'Unknown error',
            providerInfo,
          },
          { status: 500 }
        );
      }
    }

    // Send test email if requested
    let testEmailSent = false;
    let testEmailError = null;
    if (sendTest && testEmail) {
      try {
        await sendEmail(
          {
            to: testEmail,
            subject: 'LessonCraftStudio - Test Email',
            html: `
              <!DOCTYPE html>
              <html>
                <head>
                  <meta charset="utf-8">
                  <style>
                    body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
                    .container { max-width: 600px; margin: 0 auto; padding: 20px; }
                    .header { background-color: #007bff; color: white; padding: 20px; border-radius: 5px; }
                    .content { padding: 20px 0; }
                    .badge { background-color: #28a745; color: white; padding: 5px 10px; border-radius: 3px; display: inline-block; }
                    .footer { margin-top: 40px; padding-top: 20px; border-top: 1px solid #ddd; font-size: 12px; color: #666; }
                  </style>
                </head>
                <body>
                  <div class="container">
                    <div class="header">
                      <h1>✅ Email System Test</h1>
                    </div>
                    <div class="content">
                      <p><strong>Congratulations!</strong> Your email system is working correctly.</p>
                      <p><span class="badge">SMTP Connected</span></p>
                      <h3>Configuration Details:</h3>
                      <ul>
                        <li><strong>Provider:</strong> ${providerInfo.provider}</li>
                        <li><strong>Host:</strong> ${providerInfo.host || 'N/A'}</li>
                        <li><strong>From Email:</strong> ${providerInfo.fromEmail}</li>
                        <li><strong>Status:</strong> ${connectionVerified ? 'Verified ✓' : 'Console Mode'}</li>
                      </ul>
                      <p>This test was generated by LessonCraftStudio email verification system.</p>
                      <p>Time: ${new Date().toISOString()}</p>
                    </div>
                    <div class="footer">
                      <p>&copy; ${new Date().getFullYear()} LessonCraftStudio. All rights reserved.</p>
                      <p>This is an automated test email.</p>
                    </div>
                  </div>
                </body>
              </html>
            `,
          },
          { priority: 'high', immediate: true } // Send immediately for test
        );
        testEmailSent = true;
      } catch (error) {
        testEmailError = error instanceof Error ? error.message : 'Unknown error';
      }
    }

    return NextResponse.json({
      success: true,
      message: 'Email configuration test completed',
      providerInfo,
      connectionVerified: providerInfo.provider === 'console' ? 'N/A (Console Mode)' : connectionVerified,
      testEmail: sendTest
        ? {
            sent: testEmailSent,
            to: testEmail,
            error: testEmailError,
          }
        : null,
      instructions: {
        testConnection: 'GET /api/email/test',
        sendTestEmail: 'GET /api/email/test?send=true&to=your-email@example.com',
      },
    });
  } catch (error) {
    console.error('[Email Test] Error:', error);
    return NextResponse.json(
      {
        success: false,
        error: 'Email test failed',
        details: error instanceof Error ? error.message : 'Unknown error',
      },
      { status: 500 }
    );
  }
}

// Wrap with admin authentication
export const GET = withAdmin(testEmailHandler);
